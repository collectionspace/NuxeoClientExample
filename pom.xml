<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.collectionspace.services</groupId>
	<artifactId>nuxeoclientexample</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>nuxeoclientexample Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<nuxeo.core.version>6.0</nuxeo.core.version>
		<nuxeo.platform.version>6.0</nuxeo.platform.version>
		<!-- using the tomcat 6.x container -->
		<cargo.container>tomcat7x</cargo.container>
		<catalina.home>${env.CATALINA_HOME}</catalina.home>
	</properties>

	<repositories>
		<repository>
			<id>public</id>
			<url>http://maven.nuxeo.org/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>public-snapshot</id>
			<url>http://maven.nuxeo.org/public-snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<!-- Nuxeo runtime dependencies will be provided by the Nuxeo EP framework. -->
		<dependency>
			<groupId>org.nuxeo.lib.runtime</groupId>
			<artifactId>nuxeo-runtime-launcher</artifactId>
			<version>${nuxeo.core.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.nuxeo.ecm.core</groupId>
			<artifactId>nuxeo-core-api</artifactId>
			<version>${nuxeo.core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.nuxeo.ecm.platform</groupId>
			<artifactId>nuxeo-platform-filemanager-core</artifactId>
			<version>${nuxeo.platform.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.nuxeo.lib.core</groupId>
			<artifactId>nuxeo-core-storage-sql-extensions</artifactId>
			<version>${nuxeo.platform.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>nuxeoclientexample</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<systemProperties>
						<property>
							<!-- Needed for log4j.xml settings to work. -->
							<name>nuxeo.log.dir</name>
							<value>nuxeo-test-logs</value>
						</property>
						<property>
							<!-- Needed for log4j.xml settings to work. -->
							<name>catalina.base</name>
							<value>test-logs</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<!-- cargo plugin -->
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.3.3</version>
				<configuration>
					<wait>false</wait>
					<!-- specifying the container -->
					<container>
						<containerId>${cargo.container}</containerId>
						<!-- assuming container is already installed -->
						<type>installed</type>
						<!-- path to the server -->
						<home>${catalina.home}</home>
						<timeout>300000</timeout>
					</container>
					<configuration>
						<type>existing</type>
						<home>${catalina.home}</home>
					</configuration>
					<deployer>
						<deployables>
							<deployable>
								<!-- location of war file -->
								<location>
									${project.basedir}/target/${project.build.finalName}.${project.packaging}
								</location>
							</deployable>
						</deployables>
					</deployer>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>deployer-deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Delete the exploded war file directory from the JEE container when 
				a 'clean' build is performed -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<phase>clean</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete verbose="true"
									dir="${catalina.home}/webapps/${project.build.finalName}" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
